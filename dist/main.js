(()=>{"use strict";const t=(t,e,n,o="important",c=!1)=>({id:Date.now(),title:t,desc:e,dueDate:n,priority:o,completed:c}),e="very important",n={default:[],home:[],work:[]},o=(t,e="default")=>(n[e].push(t),n);const c=t("Milk","Buy some milk for the cat","Some day",e),d=t("Writing","Write some text to my book","Today","not important",!0),i=t("Buy cat food","Buy some kitekat","Today",e);var r;o(c),o(d),o(i),console.log(n),function(t){const e=document.getElementById("main"),n=document.createElement("h1");n.textContent="Lika i Ya",n.setAttribute("id","mainHeader"),e.appendChild(n)}(),function(){const t=document.getElementById("main"),e=document.createElement("div");e.setAttribute("id","mainDiv"),t.appendChild(e)}(),function t(e){const o=document.querySelector("#projects-div"),c=Object.keys(e);o.innerHTML="";const d=document.createElement("h3");return d.textContent="Projects",o.appendChild(d),c.forEach((t=>{const e=document.createElement("button");e.classList.add("projects-list-button"),e.textContent=t,o.appendChild(e)})),function(e,o){const c=document.querySelector("#projects-div"),d=document.createElement("button");d.textContent="New project +",d.setAttribute("id","add-new-project-btn"),c.appendChild(d),d.addEventListener("click",(()=>{const e=document.createElement("form");e.classList.add("input-field");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","project-input"),i.setAttribute("maxlength","24"),i.setAttribute("placeholder","Enter project name");const r=document.createElement("button");r.setAttribute("type","button"),r.setAttribute("id","add-project-btn"),r.textContent="Add";const a=document.createElement("button");a.setAttribute("type","button"),a.setAttribute("id","cancel-add-project-btn"),a.textContent="Cancel",e.appendChild(i),e.appendChild(r),e.appendChild(a),c.appendChild(e),d.setAttribute("disabled",!0),function(e){const o=document.getElementById("add-project-btn"),c=document.querySelector("#cancel-add-project-btn");o.addEventListener("click",(()=>{const o=document.getElementById("project-input").value;n[o]=[],console.table(n),t(e)})),c.addEventListener("click",(()=>{const t=document.querySelector(".input-field"),e=document.querySelector("#add-new-project-btn");t&&t.remove(),e.removeAttribute("disabled")}))}(o)}))}(0,e),o}(n),r=n,document.querySelectorAll(".projects-list-button").forEach((t=>{t.addEventListener("click",(()=>{mainHeader.textContent=t.textContent,console.log(r[t.textContent]);const e=document.createElement("ul");r[t.textContent].forEach((t=>{const n=document.createElement("li");n.classList.add("li-element"),Object.keys(t).forEach((e=>{if("title"===e||"desc"===e||"dueDate"===e){const o=document.createElement("p");o.innerHTML=t[e],n.appendChild(o)}})),e.appendChild(n)})),mainDiv.innerHTML="",mainDiv.appendChild(e)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,