(()=>{"use strict";const t={default:[],home:[],work:[]},e=(e,o="default")=>(t[o].push(e),t),o=(t,e,o,n="important",c=!1)=>({id:Date.now(),title:t,desc:e,dueDate:o,priority:n,completed:c}),n=o("Milk","Buy some milk for the cat","Some day","very important"),c=o("Writing","Write some text to my book","Today","not important",!0);e(n),e(c),console.table(t.home),console.table(t.default),console.log(t),function(t){const e=document.querySelector("#projects-div"),o=Object.keys(t);var n;n=e,o.forEach((t=>{const e=document.createElement("button");e.textContent=t,n.appendChild(e)}))}(t)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQ08sTUFBTUEsRUFBVyxDQUNwQixRQUFXLEdBQ1gsS0FBUSxHQUNSLEtBQVEsSUFJQ0MsRUFBYSxDQUFDQyxFQUFNQyxFQUFVLGFBQ3ZDSCxFQUFTRyxHQUFTQyxLQUFLRixHQUNoQkYsR0NURUssRUFBYSxDQUFDQyxFQUFPQyxFQUFNQyxFQUFTQyxFQUFXLFlBQWFDLEdBQVksS0FDMUUsQ0FDSEMsR0FBS0MsS0FBS0MsTUFDVlAsUUFDQUMsT0FDQUMsVUFDQUMsV0FDQUMsY0NGRkksRUFBUVQsRUFBVyxPQUFRLDRCQUE2QixXRFFsRCxrQkNQTlUsRUFBWVYsRUFBVyxVQUFXLDZCQUE4QixRRFMzRCxpQkNUb0YsR0FHL0ZKLEVBQVdhLEdBQ1hiLEVBQVdjLEdBR1hDLFFBQVFDLE1BQU1qQixFQUFlLE1BQzdCZ0IsUUFBUUMsTUFBTWpCLEVBQWtCLFNBRWhDZ0IsUUFBUUUsSUFBSWxCLEdDVEwsU0FBd0JtQixHQUMzQixNQUFNQyxFQUFjQyxTQUFTQyxjQUFjLGlCQUNyQ0MsRUFBZUMsT0FBT0MsS0FBS04sR0FjckMsSUFBNkJPLElBUEdOLEVBQWRHLEVBUVRJLFNBQVFDLElBQ1QsTUFBTUMsRUFBU1IsU0FBU1MsY0FBYyxVQUN0Q0QsRUFBT0UsWUFBY0gsRUFDckJGLEVBQWNNLFlBQVlILEVBQU8sR0FSekMsQ0RBQUksQ0FBZWpDLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby8uL3NyYy90by1kb3MuanMiLCJ3ZWJwYWNrOi8vdG8tZG8vLi9zcmMvY3JlYXRlVG9Eby5qcyIsIndlYnBhY2s6Ly90by1kby8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly90by1kby8uL3NyYy9VSS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBPYmogdGhhdCBzdG9yZXMgdG8tZG9zIGFycmF5cyBhbmQgcHJvamVjdCBuYW1lc1xuZXhwb3J0IGNvbnN0IHRvRG9zT2JqID0ge1xuICAgIFwiZGVmYXVsdFwiOiBbXSxcbiAgICBcImhvbWVcIjogW10sXG4gICAgXCJ3b3JrXCI6IFtdLFxufTtcblxuLy8gRnVuY3Rpb24gdG8gYWRkIHRvLWRvcyB0byB0b0RvcyBvYmplY3RcbmV4cG9ydCBjb25zdCBhZGRUb0RvT2JqID0gKHRvRG8sIHByb2plY3QgPSBcImRlZmF1bHRcIikgPT4ge1xuICAgIHRvRG9zT2JqW3Byb2plY3RdLnB1c2godG9Ebyk7XG4gICAgcmV0dXJuIHRvRG9zT2JqO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZE5ld1Byb2plY3QgPSAocHJvamVjdE5hbWUpID0+IHtcbiAgICB0b0Rvc09ialtwcm9qZWN0TmFtZV0gPSBbXTtcbiAgICByZXR1cm4gdG9Eb3NPYmo7XG59XG5cbi8vYWRkTmV3UHJvamVjdChcIk15c3Rpa2FsXCIpO1xuXG5cblxuIiwiLy9GdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdG8tZG9zXG5leHBvcnQgY29uc3QgY3JlYXRlVG9EbyA9ICh0aXRsZSwgZGVzYywgZHVlRGF0ZSwgcHJpb3JpdHkgPSBcImltcG9ydGFudFwiLCBjb21wbGV0ZWQgPSBmYWxzZSkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkIDogRGF0ZS5ub3coKSxcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIGRlc2MsXG4gICAgICAgIGR1ZURhdGUsXG4gICAgICAgIHByaW9yaXR5LCBcbiAgICAgICAgY29tcGxldGVkXG4gICAgfVxufTtcblxuLy8gT2JqZWN0IHRoYXQgaG9sZHMgcHJpb3JpdGllc1xuZXhwb3J0IGNvbnN0IHByaW9yaXRpZXMgPSB7XG4gICAgXCJ2ZXJ5XCI6IFwidmVyeSBpbXBvcnRhbnRcIixcbiAgICBcImltcG9ydGFudFwiOiBcImltcG9ydGFudFwiLFxuICAgIFwibm90XCI6IFwibm90IGltcG9ydGFudFwiLFxufTtcblxuXG5cblxuXG5cblxuXG4iLCJpbXBvcnQgeyB0b0Rvc09iaiwgYWRkVG9Eb09iaiwgYWRkTmV3UHJvamVjdCB9IGZyb20gXCIuL3RvLWRvc1wiO1xuaW1wb3J0IHsgY3JlYXRlVG9EbywgcHJpb3JpdGllcyB9IGZyb20gXCIuL2NyZWF0ZVRvRG9cIjtcbmltcG9ydCB7IHJlbmRlclVJLCByZW5kZXJQcm9qZWN0cyB9IGZyb20gXCIuL1VJXCI7XG5pbXBvcnQgeyBhbGVydERhdGUgfSBmcm9tIFwiLi9kYXRlc1wiO1xuXG4vLyBjcmVhdGluZyB0d28gbmV3IHRvZG9zIHdpdGggY3JlYXRlVG9EbyBmdW5jdGlvblxuY29uc3QgbmV3RG8gPSBjcmVhdGVUb0RvKFwiTWlsa1wiLCBcIkJ1eSBzb21lIG1pbGsgZm9yIHRoZSBjYXRcIiwgXCJTb21lIGRheVwiLCBwcmlvcml0aWVzLnZlcnkpO1xuY29uc3QgYW5vdGhlckRvID0gY3JlYXRlVG9EbyhcIldyaXRpbmdcIiwgXCJXcml0ZSBzb21lIHRleHQgdG8gbXkgYm9va1wiLCBcIlRvZGF5XCIsIHByaW9yaXRpZXMubm90LCB0cnVlKTtcblxuLy8gYWRkaW5nIHByZXZpb3VzbHkgY3JlYXRlZCB0b2RvcyB0byB0aGUgb2JqZWN0IGhvbGRpbmcgdG9kb3Mgd2l0aCB0aGUgYWRkVG9Eb09iaiBmdW5jdGlvblxuYWRkVG9Eb09iaihuZXdEbyk7XG5hZGRUb0RvT2JqKGFub3RoZXJEbyk7XG5cblxuY29uc29sZS50YWJsZSh0b0Rvc09ialtcImhvbWVcIl0pO1xuY29uc29sZS50YWJsZSh0b0Rvc09ialtcImRlZmF1bHRcIl0pO1xuXG5jb25zb2xlLmxvZyh0b0Rvc09iailcblxuLy8gcmVuZGVyaW5nIHRoZSBwcm9qZWN0cyBmcm9tIHRoZSBvYmplY3QgdG8gdGhlIHByb2plY3RzLWRpdlxucmVuZGVyUHJvamVjdHModG9Eb3NPYmopO1xuXG4iLCJleHBvcnQgZnVuY3Rpb24gcmVuZGVyVUkoKSB7XG4gICAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJoZWFkZXJcIik7XG4gICAgY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lkZWJhclwiKTtcbiAgICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuXG5cbn07XG4vLyBGdW5jdGlvbiB0byByZW5kZXIgdGhlIHByb2plY3RzIHRvIHRoZSBET00gKGludG8gdGhlIHByb2plY3RzLWRpdiksIGV4cG9ydGVkIHRvIHVzZSBpbiBpbmRleC5qc1xuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclByb2plY3RzKHByb2plY3RzKSB7XG4gICAgY29uc3QgcHJvamVjdHNEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3RzLWRpdlwiKVxuICAgIGNvbnN0IHByb2plY3RzS2V5cyA9IE9iamVjdC5rZXlzKHByb2plY3RzKTtcblxuICAgIC8vIHByb2plY3RzS2V5cy5mb3JFYWNoKGtleSA9PiB7XG4gICAgLy8gICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgLy8gICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IGtleTtcbiAgICAvLyAgICAgcHJvamVjdHNEaXYuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICAvLyB9KTtcbiAgICBjcmVhdGVCdXR0b25zKHByb2plY3RzS2V5cywgcHJvamVjdHNEaXYpO1xuXG4gICAgcmV0dXJuIHByb2plY3RzRGl2O1xufTtcblxuLyogSGVscGVyIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBidXR0b25zIGZyb20gb2JqZWN0IGtleXMgc28gXG50aGF0IHRoZSBmdW5jdGlvbiBhYm92ZSBvbmx5IGhhcyBvbmUgcmVzcG9uc2liaWxpdHkgKFNvbGlkKSAqL1xuZnVuY3Rpb24gY3JlYXRlQnV0dG9ucyhrZXlzLCBkaXZUb0FwcGVuZFRvKSB7XG4gICAga2V5cy5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IGtleTtcbiAgICAgICAgZGl2VG9BcHBlbmRUby5hcHBlbmRDaGlsZChidXR0b24pO1xuICAgIH0pO1xuICAgIHJldHVybiBkaXZUb0FwcGVuZFRvO1xufTsiXSwibmFtZXMiOlsidG9Eb3NPYmoiLCJhZGRUb0RvT2JqIiwidG9EbyIsInByb2plY3QiLCJwdXNoIiwiY3JlYXRlVG9EbyIsInRpdGxlIiwiZGVzYyIsImR1ZURhdGUiLCJwcmlvcml0eSIsImNvbXBsZXRlZCIsImlkIiwiRGF0ZSIsIm5vdyIsIm5ld0RvIiwiYW5vdGhlckRvIiwiY29uc29sZSIsInRhYmxlIiwibG9nIiwicHJvamVjdHMiLCJwcm9qZWN0c0RpdiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInByb2plY3RzS2V5cyIsIk9iamVjdCIsImtleXMiLCJkaXZUb0FwcGVuZFRvIiwiZm9yRWFjaCIsImtleSIsImJ1dHRvbiIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImFwcGVuZENoaWxkIiwicmVuZGVyUHJvamVjdHMiXSwic291cmNlUm9vdCI6IiJ9