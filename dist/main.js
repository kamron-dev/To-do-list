(()=>{"use strict";const t=(t,e,n,o="important",c=!1)=>({id:Date.now(),title:t,desc:e,dueDate:n,priority:o,completed:c}),e="very important",n={default:[],home:[],work:[]},o=(t,e="default")=>(n[e].push(t),n);function c(t){document.querySelectorAll(".projects-list-button").forEach((e=>{e.addEventListener("click",(()=>{mainHeader.textContent=e.textContent,console.log(t[e.textContent]);const n=document.createElement("ul");t[e.textContent].forEach((t=>{const e=document.createElement("li");e.classList.add("li-element"),Object.keys(t).forEach((n=>{if("title"===n||"desc"===n||"dueDate"===n){const o=document.createElement("p");o.innerHTML=t[n],e.appendChild(o)}})),n.appendChild(e)})),mainDiv.innerHTML="",mainDiv.appendChild(n)}))}))}!function(){const t=document.createElement("button");t.setAttribute("id","new-ToDo-btn"),t.textContent="add",main.appendChild(t)}();const d=t("Milk","Buy some milk for the cat","Some day",e),i=t("Writing","Write some text to my book","Today","not important",!0),r=t("Buy cat food","Buy some kitekat","Today",e);o(d),o(i),o(r),function(t){const e=document.getElementById("main"),n=document.createElement("h1");n.textContent="Lika i Ya",n.setAttribute("id","mainHeader"),e.appendChild(n)}(),function(){const t=document.getElementById("main"),e=document.createElement("div");e.setAttribute("id","mainDiv"),t.appendChild(e)}(),function t(e){const o=document.querySelector("#projects-div"),d=Object.keys(e);o.innerHTML="";const i=document.createElement("h3");return i.textContent="Projects",o.appendChild(i),d.forEach((t=>{const e=document.createElement("button");e.classList.add("projects-list-button"),e.textContent=t,o.appendChild(e)})),function(e,o){const d=document.querySelector("#projects-div"),i=document.createElement("button");i.textContent="New project +",i.setAttribute("id","add-new-project-btn"),d.appendChild(i),i.addEventListener("click",(()=>{const e=document.createElement("form");e.classList.add("input-field");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","project-input"),r.setAttribute("maxlength","24"),r.setAttribute("placeholder","Enter project name"),r.setAttribute("autocomplete","off");const a=document.createElement("button");a.setAttribute("type","button"),a.setAttribute("id","add-project-btn"),a.textContent="Add";const u=document.createElement("button");u.setAttribute("type","button"),u.setAttribute("id","cancel-add-project-btn"),u.textContent="Cancel",e.appendChild(r),e.appendChild(a),e.appendChild(u),d.appendChild(e),i.setAttribute("disabled",!0),function(e){const o=document.getElementById("add-project-btn"),d=document.querySelector("#cancel-add-project-btn");o.addEventListener("click",(()=>{const o=document.getElementById("project-input").value;n[o]=[],console.table(n),t(e),c(e)})),d.addEventListener("click",(()=>{const t=document.querySelector(".input-field"),e=document.querySelector("#add-new-project-btn");t&&t.remove(),e.removeAttribute("disabled")}))}(o)}))}(0,e),o}(n),c(n)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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a0MsQ0FDWCxDQ2hCSUQsQ0FBcUN2QyxHQUNyQ0ssRUFBZ0JMLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby8uL3NyYy9jcmVhdGVUb0RvLmpzIiwid2VicGFjazovL3RvLWRvLy4vc3JjL1VJLmpzIiwid2VicGFjazovL3RvLWRvLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vRmFjdG9yeSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdG8tZG8gb2JqZWN0c1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVRvRG8gPSAodGl0bGUsIGRlc2MsIGR1ZURhdGUsIHByaW9yaXR5ID0gXCJpbXBvcnRhbnRcIiwgY29tcGxldGVkID0gZmFsc2UpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZCA6IERhdGUubm93KCksXG4gICAgICAgIHRpdGxlLFxuICAgICAgICBkZXNjLFxuICAgICAgICBkdWVEYXRlLFxuICAgICAgICBwcmlvcml0eSwgXG4gICAgICAgIGNvbXBsZXRlZFxuICAgIH1cbn07XG5cbi8vIE9iamVjdCB0aGF0IGhvbGRzIHByaW9yaXRpZXNcbmV4cG9ydCBjb25zdCBwcmlvcml0aWVzID0ge1xuICAgIFwidmVyeVwiOiBcInZlcnkgaW1wb3J0YW50XCIsXG4gICAgXCJpbXBvcnRhbnRcIjogXCJpbXBvcnRhbnRcIixcbiAgICBcIm5vdFwiOiBcIm5vdCBpbXBvcnRhbnRcIixcbn07XG5cbi8vIE9iaiB0aGF0IHN0b3JlcyB0by1kb3MgYXJyYXlzIGFuZCBwcm9qZWN0IG5hbWVzXG5cbmV4cG9ydCBjb25zdCB0b0Rvc09iaiA9IHtcbiAgICBcImRlZmF1bHRcIjogW10sXG4gICAgXCJob21lXCI6IFtdLFxuICAgIFwid29ya1wiOiBbXSxcbn07XG5cbi8vIEZ1bmN0aW9uIHRvIGFkZCB0by1kb3MgdG8gdG9Eb3Mgb2JqZWN0XG5cbmV4cG9ydCBjb25zdCBhZGRUb0RvT2JqID0gKHRvRG8sIHByb2plY3QgPSBcImRlZmF1bHRcIikgPT4ge1xuICAgIHRvRG9zT2JqW3Byb2plY3RdLnB1c2godG9Ebyk7XG4gICAgcmV0dXJuIHRvRG9zT2JqO1xufTtcblxuLy8gRnVuY3Rpb24gdG8gYWRkIG5ldyBwcm9qZWN0c1xuXG5leHBvcnQgY29uc3QgYWRkTmV3UHJvamVjdCA9IChwcm9qZWN0TmFtZSkgPT4ge1xuICAgIHRvRG9zT2JqW3Byb2plY3ROYW1lXSA9IFtdO1xuICAgIHJldHVybiB0b0Rvc09iajtcbn1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiIsImltcG9ydCB7IHRvRG9zT2JqIH0gZnJvbSBcIi4vY3JlYXRlVG9Eb1wiO1xuaW1wb3J0IHsgYWRkTmV3UHJvamVjdCB9IGZyb20gXCIuL2NyZWF0ZVRvRG9cIjtcblxuLy9GdW5jdGlvbiB0byBjcmVhdGUgdGhlIGRpdiBpbnNpZGUgdGhlIG1haW4gcGFydCBvZiB0aGUgc2NyZWVuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTWFpbkRpdigpIHtcbiAgICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICAgIGNvbnN0IG1haW5EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG1haW5EaXYuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJtYWluRGl2XCIpO1xuICAgIG1haW4uYXBwZW5kQ2hpbGQobWFpbkRpdik7XG4gICAgXG4gICAgcmV0dXJuIHsgbWFpbiwgbWFpbkRpdiB9XG59O1xuXG4vLyBGdW5jdGlvbiB0byByZW5kZXIgdGhlIHByb2plY3RzIHRvIHRoZSBET00gYXMgYnV0dG9ucyAoaW50byB0aGUgcHJvamVjdHMtZGl2KSwgZXhwb3J0ZWQgdG8gdXNlIGluIGluZGV4LmpzXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQnV0dG9uc0ZvckVhY2hQcm9qZWN0T25TaWRlYmFyKHByb2plY3RzKSB7XG4gICAgY29uc3QgcHJvamVjdHNEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3RzLWRpdlwiKTtcbiAgICBjb25zdCBwcm9qZWN0c0tleXMgPSBPYmplY3Qua2V5cyhwcm9qZWN0cyk7XG5cbiAgICAvL0NsZWFyIG91dCB0aGUgcHJvamVjdHMgZGl2IGZpcnN0IEFMV0FZUyBDTEVBUiBPVVQgQkVGT1JFIEFERElORyBORVdcbiAgICBwcm9qZWN0c0Rpdi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGNvbnN0IHByb2plY3RIZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgcHJvamVjdEhlYWRlci50ZXh0Q29udGVudCA9IFwiUHJvamVjdHNcIjtcblxuICAgIHByb2plY3RzRGl2LmFwcGVuZENoaWxkKHByb2plY3RIZWFkZXIpO1xuXG4gICAgLy9DcmVhdGluZyBidXR0b25zIGZyb20gdG9Eb3NPYmoga2V5c1xuICAgIHByb2plY3RzS2V5cy5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdHMtbGlzdC1idXR0b25cIik7XG4gICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IGtleTtcbiAgICAgICAgcHJvamVjdHNEaXYuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICB9KTtcblxuICAgIGFkZFByb2plY3RCdXR0b24oXCJOZXcgcHJvamVjdCArXCIsIHByb2plY3RzKVxuICAgIHJldHVybiBwcm9qZWN0c0Rpdjtcbn07XG5cbi8vIEZ1bmN0aW9uIHRvIGNyZWF0ZSB0aGUgbWFpbkRpdiBoZWFkZXIgdGhhdCBzaG91bGQgYmUgdXBkYXRlZFxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUhlYWRlcihuYW1lKSB7XG4gICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgICBjb25zdCBtYWluSGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgxXCIpO1xuICAgIG1haW5IZWFkZXIudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIG1haW5IZWFkZXIuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJtYWluSGVhZGVyXCIpO1xuICAgIG1haW4uYXBwZW5kQ2hpbGQobWFpbkhlYWRlcik7XG5cbiAgICByZXR1cm4geyBtYWluLCBtYWluSGVhZGVyIH07XG5cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5UHJvamVjdHMocHJvamVjdHMpIHtcbiAgICAvLyBDaG9vc2luZyBhbGwgdGhlIGJ1dHRvbnMgd2l0aCBwcm9qZWN0bmFtZXMgXG4gICAgY29uc3QgYnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucHJvamVjdHMtbGlzdC1idXR0b25cIik7XG4gICAgLy8gSXRlcmF0aW5nIHRocm91Z2ggdGhvc2UgYnV0dG9uc1xuICAgIGJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4ge1xuICAgICAgICAvLyBhZGRpbmcgY2xpY2sgZXZlbnQgbGlzdGVuZXJzIHRvIHRoZW1cbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAvLyB1cGRhdGluZyB0aGUgaGVhZGVyXG4gICAgICAgICAgICBtYWluSGVhZGVyLnRleHRDb250ZW50ID0gYnV0dG9uLnRleHRDb250ZW50O1xuICAgICAgICAgICAgY29uc29sZS5sb2cocHJvamVjdHNbYnV0dG9uLnRleHRDb250ZW50XSk7XG4gICAgICAgICAgICAvLyBjcmVhdGluZyBhIHVsIGVsZW1lbnQgdG8gaG9sZCBhbGwgdGhlIHRvRG9zIGluc2lkZVxuICAgICAgICAgICAgY29uc3QgdWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidWxcIik7XG4gICAgICAgICAgICAvLyBpdGVyYXRpbmcgdGhyb3VnaCBlYWNoIHByb2plY3RzIGFycmF5IHRoYXQgaG9sZCB0b0RvIG9iamVjdHNcbiAgICAgICAgICAgIHByb2plY3RzW2J1dHRvbi50ZXh0Q29udGVudF0uZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICAvL2NyZWF0aW5nIGEgbGkgZWxlbWVudCB0byBob2xkIGVhY2ggdG9EbyBvYmplY3RzXG4gICAgICAgICAgICAgICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgICAgICAgICAgICAgbGkuY2xhc3NMaXN0LmFkZChcImxpLWVsZW1lbnRcIik7XG4gICAgICAgICAgICAgICAgLy8gaXRlcmF0aW5nIHRocm91Z2ggZWFjaCB0b0RvIG9iaiBrZXlcbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhpdGVtKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBrZXkgZXF1YWxzIGRlc2NyaXB0aW9uXG4gICAgICAgICAgICAgICAgICAgIGlmIChrZXkgPT09IFwidGl0bGVcIiB8fCBrZXkgPT09IFwiZGVzY1wiIHx8IGtleSA9PT0gXCJkdWVEYXRlXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSBhIHAgZWxlbWVudCB0byBob2xkIHRoZSB0ZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBwdXR0aW5nIHRoZSB2YWx1ZSBvZiB0aGUga2V5IGluc2lkZSB0aGUgcCBlbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICBwLmlubmVySFRNTCA9IGl0ZW1ba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFwcGVuZGluZyB0aGUgcCBlbGVtZW50IHdpdGggaW5mbyB0byB0aGUgbGkgZWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgbGkuYXBwZW5kQ2hpbGQocCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC8vIGFwcGVuZGluZyB0aGUgbGkgZWxlbWVudCB0byB0aGUgcGFyZW50IHVsIGVsZW1lbnQgY3JlYXRlZCBvbiBsaW5lIDc4XG4gICAgICAgICAgICAgICAgdWwuYXBwZW5kQ2hpbGQobGkpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC8vIGNsZWFyaW5nIG91dCB0aGUgbWFpbiBkaXYgYmVmb3JlIHJlbmRlcmluZyB0aGUgY29udGVudCBpbnNpZGVcbiAgICAgICAgICAgIG1haW5EaXYuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgICAgIC8vYXBwZW5kaW5nIHRoZSB1bCBpbnNpZGUgdGhlIG1haW5EaXZcbiAgICAgICAgICAgIG1haW5EaXYuYXBwZW5kQ2hpbGQodWwpO1xuICAgICAgICAgICAgXG4gICAgICAgIH0pXG4gICAgfSlcbn07XG5cbmZ1bmN0aW9uIGFkZFByb2plY3RCdXR0b24oYnV0dG9uTmFtZSwgcHJvamVjdHMpIHtcbiAgICBjb25zdCBwcm9qZWN0c0RpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdHMtZGl2XCIpO1xuICAgIGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgYWRkQnV0dG9uLnRleHRDb250ZW50ID0gYnV0dG9uTmFtZTtcbiAgICBhZGRCdXR0b24uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJhZGQtbmV3LXByb2plY3QtYnRuXCIpXG4gICAgXG4gICAgcHJvamVjdHNEaXYuYXBwZW5kQ2hpbGQoYWRkQnV0dG9uKTtcbiAgICBcbiAgICBhZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xuICAgICAgICBmb3JtLmNsYXNzTGlzdC5hZGQoXCJpbnB1dC1maWVsZFwiKTtcblxuICAgICAgICBjb25zdCBpbnB1dEZpZWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgICAgICBpbnB1dEZpZWxkLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0XCIpO1xuICAgICAgICBpbnB1dEZpZWxkLnNldEF0dHJpYnV0ZShcImlkXCIsIFwicHJvamVjdC1pbnB1dFwiKTtcbiAgICAgICAgaW5wdXRGaWVsZC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIyNFwiKTtcbiAgICAgICAgaW5wdXRGaWVsZC5zZXRBdHRyaWJ1dGUoXCJwbGFjZWhvbGRlclwiLCBcIkVudGVyIHByb2plY3QgbmFtZVwiKTtcbiAgICAgICAgaW5wdXRGaWVsZC5zZXRBdHRyaWJ1dGUoXCJhdXRvY29tcGxldGVcIiwgXCJvZmZcIik7XG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcImJ1dHRvblwiKTtcbiAgICAgICAgYWRkUHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImFkZC1wcm9qZWN0LWJ0blwiKTtcbiAgICAgICAgYWRkUHJvamVjdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQWRkXCI7XG5cbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgY2FuY2VsQnV0dG9uLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJidXR0b25cIik7XG4gICAgICAgIGNhbmNlbEJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImNhbmNlbC1hZGQtcHJvamVjdC1idG5cIik7XG4gICAgICAgIGNhbmNlbEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ2FuY2VsXCI7XG4gICAgICAgIFxuICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGlucHV0RmllbGQpO1xuICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGFkZFByb2plY3RCdXR0b24pO1xuICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGNhbmNlbEJ1dHRvbik7XG5cbiAgICAgICAgcHJvamVjdHNEaXYuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gICAgICAgIFxuICAgICAgICBhZGRCdXR0b24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XG4gICAgICAgIGhhbmRsZU5ld1Byb2plY3RzKHByb2plY3RzKTtcbiAgICB9KVxuICAgIFxufTtcblxuZnVuY3Rpb24gaGFuZGxlTmV3UHJvamVjdHMocHJvamVjdHMpIHtcbiAgICBjb25zdCBhZGRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZC1wcm9qZWN0LWJ0blwiKTtcbiAgICBjb25zdCBjYW5jZWxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhbmNlbC1hZGQtcHJvamVjdC1idG5cIik7XG5cbiAgICBhZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgaW5wdXR0ZWROYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0LWlucHV0XCIpLnZhbHVlO1xuICAgICAgICBhZGROZXdQcm9qZWN0KGlucHV0dGVkTmFtZSk7XG4gICAgICAgIGNvbnNvbGUudGFibGUodG9Eb3NPYmopO1xuICAgICAgICBjcmVhdGVCdXR0b25zRm9yRWFjaFByb2plY3RPblNpZGViYXIocHJvamVjdHMpO1xuICAgICAgICBkaXNwbGF5UHJvamVjdHMocHJvamVjdHMpO1xuICAgIFxuICAgIH0pO1xuICAgIFxuICAgIGNhbmNlbEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbnB1dC1maWVsZFwiKTtcbiAgICAgICAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtbmV3LXByb2plY3QtYnRuXCIpO1xuICAgICAgICBpZiAoZm9ybSkgZm9ybS5yZW1vdmUoKTtcbiAgICAgICAgYnV0dG9uLnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xuXG4gICAgfSlcbn07XG5cbmZ1bmN0aW9uIGFkZE5ld1RvRG9CdG4oKSB7XG4gICAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBidXR0b24uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJuZXctVG9Eby1idG5cIik7XG4gICAgYnV0dG9uLnRleHRDb250ZW50ID0gXCJhZGRcIjtcbiAgICBtYWluLmFwcGVuZENoaWxkKGJ1dHRvbik7XG59O1xuXG5hZGROZXdUb0RvQnRuKCk7XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiIsImltcG9ydCB7IGNyZWF0ZVRvRG8sIHByaW9yaXRpZXMsIHRvRG9zT2JqLCBhZGRUb0RvT2JqIH0gZnJvbSBcIi4vY3JlYXRlVG9Eb1wiO1xuaW1wb3J0IHsgY3JlYXRlTWFpbkRpdiwgY3JlYXRlQnV0dG9uc0ZvckVhY2hQcm9qZWN0T25TaWRlYmFyLCBjcmVhdGVIZWFkZXIsIGRpc3BsYXlQcm9qZWN0cyB9IGZyb20gXCIuL1VJXCI7XG4vLyBpbXBvcnQgeyBhbGVydERhdGUgfSBmcm9tIFwiLi9kYXRlc1wiO1xuXG4vLyBjcmVhdGluZyB0aHJlZSBuZXcgdG9kb3Mgd2l0aCBjcmVhdGVUb0RvIGZ1bmN0aW9uXG5jb25zdCBuZXdEbyA9IGNyZWF0ZVRvRG8oXCJNaWxrXCIsIFwiQnV5IHNvbWUgbWlsayBmb3IgdGhlIGNhdFwiLCBcIlNvbWUgZGF5XCIsIHByaW9yaXRpZXMudmVyeSk7XG5jb25zdCBhbm90aGVyRG8gPSBjcmVhdGVUb0RvKFwiV3JpdGluZ1wiLCBcIldyaXRlIHNvbWUgdGV4dCB0byBteSBib29rXCIsIFwiVG9kYXlcIiwgcHJpb3JpdGllcy5ub3QsIHRydWUpO1xuY29uc3QgdGhpcmRUb0RvID0gY3JlYXRlVG9EbyhcIkJ1eSBjYXQgZm9vZFwiLCBcIkJ1eSBzb21lIGtpdGVrYXRcIiwgXCJUb2RheVwiLCBwcmlvcml0aWVzLnZlcnkpO1xuXG5cbi8vIGFkZGluZyBwcmV2aW91c2x5IGNyZWF0ZWQgdG9kb3MgdG8gdGhlIG9iamVjdCBob2xkaW5nIHRvZG9zIHdpdGggdGhlIGFkZFRvRG9PYmogZnVuY3Rpb25cbmFkZFRvRG9PYmoobmV3RG8pO1xuYWRkVG9Eb09iaihhbm90aGVyRG8vKiwgZS5nLiBob21lKi8pOyAvLyBvcHRpb25hbCBhcmd1bWVudCB0aGF0IHNwZWNpZmllcyB0aGUgcHJvamVjdCB0byBwdXQgdGhlIHRvLWRvIGludG9cbmFkZFRvRG9PYmoodGhpcmRUb0RvKTtcblxuXG4oZnVuY3Rpb24gY3JlYXRlUGFnZSgpIHtcbiAgICBjcmVhdGVIZWFkZXIoXCJMaWthIGkgWWFcIik7XG4gICAgY3JlYXRlTWFpbkRpdigpO1xuICAgIGNyZWF0ZUJ1dHRvbnNGb3JFYWNoUHJvamVjdE9uU2lkZWJhcih0b0Rvc09iaik7XG4gICAgZGlzcGxheVByb2plY3RzKHRvRG9zT2JqKTtcbn0pKCk7Il0sIm5hbWVzIjpbImNyZWF0ZVRvRG8iLCJ0aXRsZSIsImRlc2MiLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJjb21wbGV0ZWQiLCJpZCIsIkRhdGUiLCJub3ciLCJwcmlvcml0aWVzIiwidG9Eb3NPYmoiLCJhZGRUb0RvT2JqIiwidG9EbyIsInByb2plY3QiLCJwdXNoIiwiZGlzcGxheVByb2plY3RzIiwicHJvamVjdHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiYnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1haW5IZWFkZXIiLCJ0ZXh0Q29udGVudCIsImNvbnNvbGUiLCJsb2ciLCJ1bCIsImNyZWF0ZUVsZW1lbnQiLCJpdGVtIiwibGkiLCJjbGFzc0xpc3QiLCJhZGQiLCJPYmplY3QiLCJrZXlzIiwia2V5IiwicCIsImlubmVySFRNTCIsImFwcGVuZENoaWxkIiwibWFpbkRpdiIsInNldEF0dHJpYnV0ZSIsIm1haW4iLCJhZGROZXdUb0RvQnRuIiwibmV3RG8iLCJhbm90aGVyRG8iLCJ0aGlyZFRvRG8iLCJuYW1lIiwiZ2V0RWxlbWVudEJ5SWQiLCJjcmVhdGVIZWFkZXIiLCJjcmVhdGVNYWluRGl2IiwiY3JlYXRlQnV0dG9uc0ZvckVhY2hQcm9qZWN0T25TaWRlYmFyIiwicHJvamVjdHNEaXYiLCJxdWVyeVNlbGVjdG9yIiwicHJvamVjdHNLZXlzIiwicHJvamVjdEhlYWRlciIsImJ1dHRvbk5hbWUiLCJhZGRCdXR0b24iLCJmb3JtIiwiaW5wdXRGaWVsZCIsImFkZFByb2plY3RCdXR0b24iLCJjYW5jZWxCdXR0b24iLCJhZGRCdG4iLCJjYW5jZWxCdG4iLCJpbnB1dHRlZE5hbWUiLCJ2YWx1ZSIsInRhYmxlIiwicmVtb3ZlIiwicmVtb3ZlQXR0cmlidXRlIiwiaGFuZGxlTmV3UHJvamVjdHMiXSwic291cmNlUm9vdCI6IiJ9