(()=>{"use strict";const t=(t,e,n,o="important",i=!1)=>({id:Date.now(),title:t,desc:e,dueDate:n,priority:o,completed:i}),e={default:[],home:[],work:[]},n=(t,n="default")=>(e[n].push(t),e),o=t=>(e[t]=[],e);function i(t){const n=document.querySelector("#projects-div"),c=Object.keys(t);n.innerHTML="";const r=document.createElement("h3");return r.textContent="Projects",n.appendChild(r),c.forEach((t=>{const e=document.createElement("button");e.classList.add("projects-list-button"),e.textContent=t,n.appendChild(e)})),function(t,n){const c=document.querySelector("#projects-div"),r=document.createElement("button");r.textContent="New project +",r.setAttribute("id","add-new-project-btn"),c.appendChild(r),r.addEventListener("click",(()=>{const t=document.createElement("form");t.classList.add("input-field");const u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("id","project-input"),u.setAttribute("maxlength","24"),u.setAttribute("placeholder","Enter project name"),u.setAttribute("autocomplete","off");const a=document.createElement("button");a.setAttribute("type","button"),a.setAttribute("id","add-project-btn"),a.textContent="Add";const l=document.createElement("button");l.setAttribute("type","button"),l.setAttribute("id","cancel-add-project-btn"),l.textContent="Cancel",t.appendChild(u),t.appendChild(a),t.appendChild(l),c.appendChild(t),r.setAttribute("disabled",!0),function(t){const n=document.getElementById("add-project-btn"),c=document.querySelector("#cancel-add-project-btn");n.addEventListener("click",(()=>{const n=document.getElementById("project-input").value;o(n),console.table(e),i(t),d(t)})),c.addEventListener("click",(()=>{const t=document.querySelector(".input-field"),e=document.querySelector("#add-new-project-btn");t&&t.remove(),e.removeAttribute("disabled")}))}(n)}))}(0,t),n}function d(e){document.querySelectorAll(".projects-list-button").forEach((o=>{o.addEventListener("click",(()=>{mainHeader.textContent=o.textContent,console.log(e[o.textContent]),function(){const e=document.createElement("button");e.setAttribute("id","new-ToDo-btn"),e.textContent="add",main.appendChild(e),e.addEventListener("click",(()=>{const e=document.createElement("div");e.setAttribute("id","input-Div"),main.appendChild(e),c("input-Div","form",{id:"input-form"}),c("input-form","label",{for:"title-input"}).textContent="Title",c("input-form","input",{type:"text",id:"title-input"}),c("input-form","label",{for:"desc-input"}).textContent="Description",c("input-form","textarea",{id:"desc-input",rows:"5"}),c("input-form","label",{for:"dueDate"}).textContent="Due date",c("input-form","input",{type:"date",id:"dueDate"}),c("input-form","label",{for:"priority"}).textContent="Priority",c("input-form","select",{id:"priority"}),c("priority","option",{value:"very"}).textContent="Very Important",c("priority","option",{value:"important"}).textContent="Important",c("priority","option",{value:"not"}).textContent="Not Important",c("input-form","button",{id:"addToDoBtn",type:"button"}).textContent="Add To-do",c("input-form","button",{id:"cancelBtn",type:"button"}).textContent="Cancel",function(e){const o=document.getElementById("addToDoBtn"),d=document.getElementById("cancelBtn"),c=document.getElementById("title-input"),r=document.getElementById("desc-input"),u=document.getElementById("dueDate"),a=document.getElementById("priority"),l=document.getElementById("mainHeader"),m=document.getElementById("input-Div");o.addEventListener("click",(()=>{n(t(c.value,r.value,u.value,a.value),l.textContent),i(undefined),m.remove()})),d.addEventListener("click",(()=>{m.remove()}))}()}))}();const d=document.createElement("ul");e[o.textContent].forEach((t=>{const e=document.createElement("li");e.classList.add("li-element"),Object.keys(t).forEach((n=>{if("title"===n||"desc"===n||"dueDate"===n){const o=document.createElement("p");o.innerHTML=t[n],e.appendChild(o)}})),d.appendChild(e)})),mainDiv.innerHTML="",mainDiv.appendChild(d)}))}))}function c(t,e,n){let o=document.createElement(e);for(let t in n)n.hasOwnProperty(t)&&o.setAttribute(t,n[t]);return document.getElementById(t).appendChild(o),o}console.log(e);const r=t("Milk","Buy some milk for the cat","12-02-2024","very important"),u=t("Writing","Write some text to my book","14-04-2024","not important",!0),a=t("Buy cat food","Buy some kitekat","04-05-2024","very imortant");n(r),n(u),n(a),function(t){const e=document.getElementById("main"),n=document.createElement("h1");n.textContent="Lika i ya",n.setAttribute("id","mainHeader"),e.appendChild(n)}(),function(){const t=document.getElementById("main"),e=document.createElement("div");e.setAttribute("id","mainDiv"),t.appendChild(e)}(),i(e),d(e)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,